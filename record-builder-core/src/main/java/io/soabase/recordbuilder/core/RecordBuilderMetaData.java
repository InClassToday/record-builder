/**
 * Copyright 2016 Jordan Zimmerman
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.soabase.recordbuilder.core;

public interface RecordBuilderMetaData {
    /**
     * If you want to use your own meta data instance:
     * <ul>
     *     <li>create a class that implements {@code RecordBuilderMetaData}</li>
     *     <li>When compiling, make sure that compiled class is in the processor path</li>
     *     <li>Add a "metaDataClass" compiler option with the class name. E.g. {@code javac ... -AmetaDataClass=foo.bar.MyMetaData}</li>
     * </ul>
     */
    String JAVAC_OPTION_NAME = "metaDataClass";

    /**
     * The default meta data instance
     */
    RecordBuilderMetaData DEFAULT = new RecordBuilderMetaData() {};

    /**
     * The builder class name will be the name of the record (prefixed with any enclosing class) plus this suffix. E.g.
     * if the record name is "Foo", the builder will be named "FooBuilder".
     *
     * @return suffix
     */
    default String suffix() {
        return "Builder";
    }

    /**
     * The name to use for the copy builder
     *
     * @return copy builder name
     */
    default String copyMethodName() {
        return builderMethodName();
    }

    /**
     * The name to use for the builder
     *
     * @return builder name
     */
    default String builderMethodName() {
        return "builder";
    }

    /**
     * The name to use for the build method
     *
     * @return build method
     */
    default String buildMethodName() {
        return "build";
    }

    /**
     * Return the comment to place at the top of generated files. Return null or an empty string for no comment.
     *
     * @return comment or empty
     */
    default String fileComment() {
        return "Auto generated by io.soabase.recordbuilder.core.RecordBuilder: https://github.com/Randgalt/record-builder";
    }

    /**
     * Return the file indent to use
     *
     * @return file index
     */
    default String fileIndent() {
        return "    ";
    }

    /**
     * If the record is declared inside of another class, the outer class's name will
     * be prefixed to the builder name if this returns true.
     *
     * @return true/false
     */
    default boolean prefixEnclosingClassNames() {
        return true;
    }
}
